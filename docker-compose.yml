version: "3.8"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - backend
    ports:
      - 9200:9200

  db:
    image: postgres:12.3-alpine
    container_name: db
    env_file:
      - .env_file
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend
    secrets:
      - db_password

  redis:
    image: redis:6.0.6-alpine3.12
    container_name: redis
    command: redis-server
    volumes:
      - redis:/data
    networks:
      - backend

  sidekiq:
    image: smektor/sportnacja
    container_name: sidekiq
    env_file:
      - .env_file
    command: bundle exec sidekiq -C config/sidekiq.yml
    networks:
      - backend
    secrets:
      - db_password

  nginx:
    image: nginx:1.19.2-alpine
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf
    networks:
      - frontend

  app:
    image: smektor/sportnacja
    container_name: sportnacja_app
    env_file:
      - .env_file
    entrypoint: /usr/bin/entrypoint.sh
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    networks:
      - frontend
      - backend
    secrets:
      - db_password

volumes:
  redis:
  postgres:
  elasticsearch:

networks:
  backend:
  frontend:

secrets:
  db_password:
    external: true
